<Window x:Class="HOK.SmartBCF.AddIn.ComponentWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:ut="clr-namespace:HOK.SmartBCF.Utils;assembly=HOK.SmartBCF"
             xmlns:aut ="clr-namespace:HOK.SmartBCF.AddIn.Util"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             Height="700" Width="450" MinHeight="700" MinWidth="450" MaxHeight="700" MaxWidth="450" Title="Revit Elements" Icon="Resources/hoklogo.ico" WindowStartupLocation="CenterScreen" UseLayoutRounding="True">
    <Window.Resources>
        <ut:ColorConverter x:Key="colorConverter"/>
        <ut:ExtensionFilterConverter x:Key="extensionConverter"/>
        <ut:BitmapConverter x:Key="bitmapConverter"/>
        <aut:ComponentConverter x:Key="componentConverter"/>
        <sys:String x:Key="action">BCF_Action</sys:String>
        <sys:String x:Key="responsibility">BCF_Responsibility</sys:String>
        <DataTemplate x:Key="extensionTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding Path=Color, Converter={StaticResource colorConverter}}" Margin="2"/>
                <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Text="{Binding ParameterValue}" Margin="2"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="#FFE6E6E6"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,3,16,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#1ba1e2" />
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF6BC3EE" />
                                <Setter Property="BorderBrush" Value="#FF6BC3EE"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition />
            <RowDefinition Height="80"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <ComboBox x:Name="comboBoxComponent" HorizontalAlignment="Center" VerticalAlignment="Center" Height="60" Width="200" Background="Transparent" 
                  ItemsSource="{Binding FilteredComponents}" SelectedIndex="{Binding SelectedComponentIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                  HorizontalContentAlignment="Left" VerticalContentAlignment="Center">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{Binding PreviewImage, Converter= {StaticResource bitmapConverter}}" Margin="2" />
                        <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding ElementName}" Margin="5,2,2,2" />
                    </Grid>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding ApplyViewCommand}"/>          
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ComboBox>
        <Button x:Name="buttonNext" Margin="260,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="54" Width="54" Background="Transparent" BorderBrush="Transparent" 
                Command="{Binding MoveComponentCommand}" CommandParameter="forward">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Image x:Name="nextImg" Source="Resources/next.png" Height="48" Width="48"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Source" TargetName="nextImg" Value="Resources/next_blue.png"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="buttonBack" Margin="-260,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="54" Width="54" Background="Transparent" BorderBrush="Transparent"
                Command="{Binding MoveComponentCommand}" CommandParameter="backward">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Image x:Name="backImg" Source="Resources/back.png" Height="48" Width="48"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Source" TargetName="backImg" Value="Resources/back_blue.png"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        
        <Grid Grid.Row="1" Grid.RowSpan="3" Background="#FFF9F9F9"/>
        
        <GroupBox Header="BCF Information" Grid.Row="1"  HorizontalAlignment="Stretch" Margin="5" VerticalAlignment="Stretch">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="20"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="20"/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="BCF Name: " HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <Label Content="Topic: " Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <Label Content="Topic Type: " Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <Label Content="Topic Status: " Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <Label Content="Assigned To: " Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <Label Content="Comment: " Grid.Row="6" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <Label Content="Author: " Grid.Row="7" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <Label Content="Date: " Grid.Row="8" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <Label Content="Action: " Grid.Row="10" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <Label Content="Responsibility: " Grid.Row="11" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"/>

                <TextBlock x:Name="textBlockBCFName" Margin="5,0,15,0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextWrapping="Wrap"
                           Text="{Binding SelectedBCF.ZipFileName}"/>
                <ScrollViewer Grid.Column="1" Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" Margin="5" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" MaxHeight="80">
                    <TextBlock x:Name="textBlockTopic" Grid.Column="1" Grid.Row="1"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextWrapping="Wrap" FontWeight="Bold"
                           Text="{Binding SelectedMarkup.Topic.Title}"/>
                </ScrollViewer>

                <TextBlock x:Name="textBlockTopicType" Margin="5,0,15,0" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextWrapping="Wrap"
                           Text="{Binding SelectedMarkup.Topic.TopicType}"/>
                <TextBlock x:Name="textBlockTopicStatus" Margin="5,0,15,0" Grid.Column="1" Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextWrapping="Wrap"
                           Text="{Binding SelectedMarkup.Topic.TopicStatus}"/>
                <TextBlock x:Name="textBlockAssignedTo" Margin="5,0,15,0" Grid.Column="1" Grid.Row="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextWrapping="Wrap"
                           Text="{Binding SelectedMarkup.Topic.AssignedTo}"/>
                <ComboBox x:Name="comboBoxComment" Margin="5,0,15,0" Grid.Column="1" Grid.Row="6" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="Transparent" Height="27"
                          ItemsSource="{Binding Comments}" DisplayMemberPath="Comment1" SelectedItem="{Binding SelectedComment}"/>
                <TextBlock x:Name="textBlockAuthor" Margin="5,0,15,0" Grid.Column="1" Grid.Row="7" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextWrapping="Wrap"
                           Text="{Binding ElementName=comboBoxComment, Path=SelectedItem.ModifiedAuthor}"/>
                <TextBlock x:Name="textBlockDate"  Margin="5,0,15,0" Grid.Column="1" Grid.Row="8" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextWrapping="Wrap"
                            Text="{Binding ElementName=comboBoxComment, Path=SelectedItem.ModifiedDate}"/>
                <ComboBox x:Name="comboBoxAction" Margin="5,0,15,0" Grid.Column="1" Grid.Row="10" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="Transparent" Height="27"
                          ItemsSource="{Binding SelectedBCF.ExtensionColor.Extensions, Converter={StaticResource extensionConverter}, ConverterParameter={StaticResource action}}" 
                          SelectedItem="{Binding ElementName=comboBoxComponent, Path=SelectedItem.Action}" ItemTemplate="{StaticResource extensionTemplate}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ComponentChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <ComboBox x:Name="comboBoxResponsibility" Margin="5,0,15,0" Grid.Column="1" Grid.Row="11" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="Transparent" Height="27"
                          ItemsSource="{Binding SelectedBCF.ExtensionColor.Extensions, Converter={StaticResource extensionConverter}, ConverterParameter={StaticResource responsibility}}" 
                          SelectedItem="{Binding ElementName=comboBoxComponent, Path=SelectedItem.Responsibility}" ItemTemplate="{StaticResource extensionTemplate}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ComponentChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>

            </Grid>
        </GroupBox>
        
        <GroupBox Header="View Options" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5,0,5,5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <CheckBox x:Name="checkBoxHighlight" Content="Highlight Element" HorizontalAlignment="Center" VerticalAlignment="Center"
                          IsChecked="{Binding IsHighlightChecked, Mode=TwoWay}" Command="{Binding HighlightCommand}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedItem.IsLinked, ElementName=comboBoxComponent}" Value="True">
                                    <Setter Property="IsChecked" Value="False"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <CheckBox x:Name="checkBoxIsolate" Grid.Column="1" Content="Isolate Element" HorizontalAlignment="Center" VerticalAlignment="Center"
                          IsChecked="{Binding IsIsolateChecked, Mode=TwoWay}" Command="{Binding IsolateCommand}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedItem.IsLinked, ElementName=comboBoxComponent}" Value="True">
                                    <Setter Property="IsChecked" Value="False"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <CheckBox x:Name="checkBoxSectionBox" Grid.Column="2" Content="Place Section Box" HorizontalAlignment="Center" VerticalAlignment="Center"
                          IsChecked="{Binding IsSectionBoxChecked}" Command="{Binding SectionboxCommand}"/>
            </Grid>
        </GroupBox>

        <Button x:Name="buttonClose" Style="{StaticResource buttonStyle}" Grid.Row="3" Margin="0,5,10,10" Content="Close" HorizontalAlignment="Right" VerticalAlignment="Top" Height="27" Width="80" Click="buttonClose_Click"/>
        <Button x:Name="buttonWriteParam" Style="{StaticResource buttonStyle}" Grid.Row="3" Margin="0,5,95,10"  HorizontalAlignment="Right" VerticalAlignment="Top" 
                Height="27" Width="150" Command="{Binding WriteParametersCommand}">
            <StackPanel Orientation="Horizontal">
                <Image Height="20" Width="20" Source="Resources/notepad.png"/> 
                <TextBlock Margin="5,0,0,0" Text="Write Parameters"/>
            </StackPanel>
        </Button>
        <Button x:Name="buttonFilter" Style="{StaticResource buttonStyle}" Grid.Row="3" Margin="0,5,250,0" HorizontalAlignment="Right" VerticalAlignment="Top" Height="27" Width="130" Click="buttonFilter_Click">
            <StackPanel Orientation="Horizontal">
                <Image Height="20" Width="20" Source="Resources/filter.png"/>
                <TextBlock Margin="5,0,0,0" Text="Apply Filters"/>
            </StackPanel>
        </Button>

        <StatusBar HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Grid.Row="4">
            <StatusBarItem>
                <TextBlock Text="{Binding IndexText}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
